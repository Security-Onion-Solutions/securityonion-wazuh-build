#!/bin/sh
# postinst script for ossec-hids-server
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    configure)
	
	DIR=/var/ossec
	GROUP="ossec"
	USER="ossec"
	USER_MAIL="ossecm"
	USER_REM="ossecr"
	OSMYSHELL="/usr/sbin/nologin"
	
	if ! getent group | grep -q "^ossec:"
	then
			groupadd --system ossec
	fi
	if ! getent passwd | grep -q "^ossec:"
	then
			useradd --system -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER}
	fi
	if ! getent passwd | grep -q "^ossecm:"
	then
			useradd --system -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER_MAIL}
	fi
	if ! getent passwd | grep -q "^ossecr:"
	then
			useradd --system -d ${DIR} -s ${OSMYSHELL} -g ${GROUP} ${USER_REM}
	fi

# download geoip db
#echo "Downloading Geoip maxmind database"
#if [ ! -f ${DIR}/etc/GeoLiteCity.dat ]; then
#  wget -q http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz -O ${DIR}/etc/GeoLiteCity.dat.gz 2>/dev/null || /bin/true
#  if [ -f ${DIR}/etc/GeoLiteCity.dat.gz ]; then
#    gunzip -f ${DIR}/etc/GeoLiteCity.dat.gz 2>/dev/null || /bin/true
#  fi
#fi 
#if [ ! -f ${DIR}/etc/GeoLiteCityv6.dat ]; then
#  wget -q http://geolite.maxmind.com/download/geoip/database/GeoLiteCityv6-beta/GeoLiteCityv6.dat.gz -O ${DIR}/etc/GeoLiteCityv6.dat.gz 2>/dev/null || /bin/true
#  if [ -f ${DIR}/etc/GeoLiteCityv6.dat.gz ]; then
#    gunzip -f ${DIR}/etc/GeoLiteCityv6.dat.gz 2>/dev/null || /bin/true
#  fi
#fi

# configure geoip db
#if [ ! -e /var/ossec/etc/GeoIP.dat ]; then
#  ln -s /usr/share/GeoIP/GeoIP.dat /var/ossec/etc/GeoIP.dat
#fi
#if [ ! -e /var/ossec/etc/GeoIPv6.dat ]; then
#  ln -s /usr/share/GeoIP/GeoIPv6.dat /var/ossec/etc/GeoIPv6.dat
#fi

# Default for all directories
chmod 550 ${DIR}
chmod 550 ${DIR}/*
chown root:${GROUP} ${DIR}
chown root:${GROUP} ${DIR}/*

# AnalysisD needs to write to alerts: log, mail and cmds
chown -R ${USER}:${GROUP} ${DIR}/queue/alerts
chmod -R 770 ${DIR}/queue/alerts

# To the ossec queue (default for analysisd to read)
chown -R ${USER}:${GROUP} ${DIR}/queue/ossec
chmod -R 770 ${DIR}/queue/ossec

# To the ossec fts queue
chown -R ${USER}:${GROUP} ${DIR}/queue/fts
chmod -R 750 ${DIR}/queue/fts
chmod 750 ${DIR}/queue/fts/* 2> /dev/null || /bin/true

# To the ossec syscheck/rootcheck queue
chown -R ${USER}:${GROUP} ${DIR}/queue/syscheck
chmod -R 750 ${DIR}/queue/syscheck
chmod 740 ${DIR}/queue/syscheck/* 2> /dev/null || /bin/true

chown -R ${USER}:${GROUP} ${DIR}/queue/rootcheck
chmod -R 750 ${DIR}/queue/rootcheck
chmod 740 ${DIR}/queue/rootcheck/* 2> /dev/null || /bin/true

chown -R ${USER}:${GROUP} ${DIR}/queue/diff
chown -R ${USER}:${GROUP} ${DIR}/queue/diff/* 2> /dev/null || /bin/true
chmod 750 ${DIR}/queue/diff
chmod 740 ${DIR}/queue/diff/* 2> /dev/null || /bin/true

chown -R ${USER_REM}:${GROUP} ${DIR}/queue/agent-info
chmod -R 750 ${DIR}/queue/agent-info
chmod 740 ${DIR}/queue/agent-info/* 2> /dev/null || /bin/true
chown -R ${USER_REM}:${GROUP} ${DIR}/queue/rids
chmod -R 750 ${DIR}/queue/rids
chmod 740 ${DIR}/queue/rids/* 2> /dev/null || /bin/true

chown -R ${USER}:${GROUP} ${DIR}/queue/agentless
chmod -R 750 ${DIR}/queue/agentless
chmod 740 ${DIR}/queue/agentless/* 2> /dev/null || /bin/true

# Wazuh added new directories

# framework root:ossec 750
chown -R root:${GROUP} ${DIR}/framework 2> /dev/null || /bin/true
chmod -R 750 ${DIR}/framework 2> /dev/null || /bin/true

# integrations root:ossec 750
chown -R root:${GROUP} ${DIR}/integrations 2> /dev/null || /bin/true
chmod -R 750 ${DIR}/integrations 2> /dev/null || /bin/true

# queue/agent-groups root:ossec 770
chown -R root:${GROUP} ${DIR}/queue/agent-groups 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/queue/agent-groups 2> /dev/null || /bin/true

# queue/agents ossec:ossec 750
chown -R ${USER}:${GROUP} ${DIR}/queue/agents 2> /dev/null || /bin/true
chmod -R 750 ${DIR}/queue/agents 2> /dev/null || /bin/true

# queue/cluster ossec:ossec 770
chown -R ${USER}:${GROUP} ${DIR}/queue/cluster 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/queue/cluster 2> /dev/null || /bin/true

# queue/db ossec:ossec 750
chown -R ${USER}:${GROUP} ${DIR}/queue/db 2> /dev/null || /bin/true
chmod -R 750 ${DIR}/queue/db 2> /dev/null || /bin/true

# queue/vulnerabilities root:ossec 770
chown -R root:${GROUP} ${DIR}/queue/vulnerabilities 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/queue/vulnerabilities 2> /dev/null || /bin/true

# var/download root:ossec 770
chown -R root:${GROUP} ${DIR}/var/download 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/var/download 2> /dev/null || /bin/true

# var/selinux root:ossec 770
chown -R root:${GROUP} ${DIR}/var/selinux 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/var/selinux 2> /dev/null || /bin/true

# var/upgrade root:ossec 770
chown -R root:${GROUP} ${DIR}/var/upgrade 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/var/upgrade 2> /dev/null || /bin/true

# var/wodles root:ossec 770
chown -R root:${GROUP} ${DIR}/var/wodles 2> /dev/null || /bin/true
chmod -R 770 ${DIR}/var/wodles 2> /dev/null || /bin/true

# End of Wazuh additions

# For the stats directory
chown -R ${USER}:${GROUP} ${DIR}/stats
chmod -R 750 ${DIR}/stats

# For the logging user
chown -R ${USER}:${GROUP} ${DIR}/logs
chmod -R 750 ${DIR}/logs
touch ${DIR}/logs/ossec.log
chown ${USER}:${GROUP} ${DIR}/logs/ossec.log
chmod 660 ${DIR}/logs/ossec.log

touch ${DIR}/logs/active-responses.log
chown ${USER}:${GROUP} ${DIR}/logs/active-responses.log
chmod 660 ${DIR}/logs/active-responses.log

# [...]
chown -R root:${GROUP} ${DIR}/rules
chmod -R 550 ${DIR}/rules


# For the etc dir
chmod 550 ${DIR}/etc
chown -R root:${GROUP} ${DIR}/etc
if [ -e /etc/localtime ]; then
    cp -pL /etc/localtime ${DIR}/etc/;
    chmod 440 ${DIR}/etc/localtime
    chown root:${GROUP} ${DIR}/etc/localtime
fi

# [...]
if [ -e /etc/TIMEZONE ]; then
    cp -p /etc/TIMEZONE ${DIR}/etc/;
    chmod 550 ${DIR}/etc/TIMEZONE
fi


# For the /var/run
chmod 770 ${DIR}/var/run
chown root:${GROUP} ${DIR}/var/run

# [...]
touch ${DIR}/etc/shared/ar.conf
chown -R root:${GROUP} ${DIR}/etc/decoders 2>/dev/null || /bin/true
chown root:${GROUP} ${DIR}/etc/local_decoder.xml 2>/dev/null || /bin/true
chown root:${GROUP} ${DIR}/etc/internal_options.conf
chown root:${GROUP} ${DIR}/etc/local_internal_options.conf 2>/dev/null || /bin/true
chown root:${GROUP} ${DIR}/etc/client.keys 2>/dev/null || /bin/true
chown root:${GROUP} ${DIR}/etc/shared/*
chown root:${GROUP} ${DIR}/agentless/*
chown ${USER}:${GROUP} ${DIR}/.ssh
chmod -R 440 ${DIR}/etc/decoders 2>/dev/null || /bin/true
chmod 440 ${DIR}/etc/local_decoder.xml 2>/dev/null || /bin/true
chmod 440 ${DIR}/etc/internal_options.conf
chmod 440 ${DIR}/etc/local_internal_options.conf 2>/dev/null || /bin/true
chmod 440 ${DIR}/etc/client.keys 2>/dev/null || /bin/true
chmod 550 ${DIR}/etc
chmod 770 ${DIR}/etc/shared
chmod 440 ${DIR}/etc/shared/*
chmod 550 ${DIR}/agentless/*
rm ${DIR}/etc/shared/merged.mg 2>/dev/null || /bin/true
chmod 700 ${DIR}/.ssh

# [...]
#active response
chmod 550 ${DIR}/active-response/bin/*
chown root:${GROUP} ${DIR}/active-response/bin/*

chown root:${GROUP} ${DIR}/bin/*
chmod 550 ${DIR}/bin/*

#[...]
# config file
chown root:${GROUP} ${DIR}/etc/ossec.conf
chmod 440 ${DIR}/etc/ossec.conf

#################
# Security Onion 
#################

# Previously, we were enabling client-syslog to send alerts to syslog to get them into single line format.  This shouldnâ€™t be necessary anymore if we move to json.
# If user enabled ELSA, configure OSSEC to send alerts to local syslog
#ELSA="no"
#FILE="/etc/nsm/securityonion.conf"
#[ -f $FILE ] && grep "ELSA=" $FILE >/dev/null && ELSA=`grep "ELSA=" $FILE | cut -d\= -f2 | tr "[:upper:]" "[:lower:]"` && if [ "$ELSA" = "yes" ]; then 
#	grep "syslog_output" /var/ossec/etc/ossec.conf >/dev/null || sed -i 's|  <rules>|  <syslog_output>\
#      <server>127.0.0.1</server>\
#  </syslog_output>\
#\
#  <rules>|g' /var/ossec/etc/ossec.conf || echo "Error adding syslog_output to ossec.conf."
#/var/ossec/bin/ossec-control enable client-syslog || echo "Error enabling client-syslog."
#fi

# local_rules.xml
DEFAULT="/var/ossec/rules/local_rules.xml"
BACKUP="/var/ossec/rules/local_rules.xml-2.8"
if [ ! -f $BACKUP ]; then
	echo "No backup rules found at $BACKUP."
else
	cp $BACKUP $DEFAULT || echo "Error restoring $BACKUP."
fi

# Check to see if user had enabled email previously
NEWCONF="/var/ossec/etc/ossec.conf"
OLDCONF="$NEWCONF-2.8"
if [ ! -f $OLDCONF ]; then
	echo "No backup config found at $OLDCONF."
else
	if grep "<email_notification>yes</email_notification>" $OLDCONF >/dev/null; then

		echo "It appears you had enabled email notification in OSSEC."
		echo "Enabing email notification and importing email settings."
		sed -i 's|<email_notification>no</email_notification>|<email_notification>yes</email_notification>|g' $NEWCONF || echo "Error enabling email notification."

		if grep "<smtp_server>" $OLDCONF >/dev/null && ! grep "<smtp_server>" $NEWCONF > /dev/null; then
			SMTP_SERVER=`grep "<smtp_server>" $OLDCONF | cut -d\> -f2 | cut -d\< -f1 | head -1`
			echo "smtp_server: $SMTP_SERVER"
			sed -i "s|<smtp_server>smtp.example.wazuh.com</smtp_server>|<smtp_server>$SMTP_SERVER</smtp_server>|g" $NEWCONF || echo "Error importing smtp_server setting."
		fi

		if grep "<email_from>" $OLDCONF >/dev/null && ! grep "<email_from>" $NEWCONF > /dev/null; then
			EMAIL_FROM=`grep "<email_from>" $OLDCONF | cut -d\> -f2 | cut -d\< -f1 | head -1`
			echo "email_from: $EMAIL_FROM"
			sed -i "s|<email_from>ossecm@example.wazuh.com</email_from>|<email_from>$EMAIL_FROM</email_from>|g" $NEWCONF || echo "Error importing email_from setting."
		fi

		if grep "<email_to>" $OLDCONF >/dev/null && ! grep "<email_to>" $NEWCONF > /dev/null; then
			EMAIL_TO=`grep "<email_to>" $OLDCONF | cut -d\> -f2 | cut -d\< -f1 | head -1`
			echo "email_to: $EMAIL_TO"
			sed -i "s|<email_to>recipient@example.wazuh.com</email_to>|<email_to>$EMAIL_TO</email_to>|g" $NEWCONF || echo "Error importing email_to setting."
		fi

		if grep "<email_maxperhour>" $OLDCONF >/dev/null && ! grep "<email_maxperhour>" $NEWCONF > /dev/null; then
			EMAIL_MAXPERHOUR=`grep "<email_maxperhour" $OLDCONF | cut -d\> -f2 | cut -d\< -f1 | head -1`
			echo "email_maxperhour: $EMAIL_MAXPERHOUR"
			sed -i "s|<email_maxperhour>12</email_maxperhour>|<email_maxperhour>$EMAIL_MAXPERHOUR</email_maxperhour>|g" $NEWCONF || echo "Error importing email_maxperhour setting."
		fi
	fi
	echo "Please double-check $NEWCONF and add back any local customizations."
fi

###
# debconf
###
#. /usr/share/debconf/confmodule
# email from
#db_input high ossec-hids-server/emailfrom || true
#db_go
# email to
#db_input high ossec-hids-server/emailto || true
#db_go
# smtp server
#db_input high ossec-hids-server/smtpserver || true
#db_go
# Check their answer.
#db_get ossec-hids-server/emailfrom
#emailfrom=$RET
#db_get ossec-hids-server/emailto
#emailto=$RET
#db_get ossec-hids-server/smtpserver
#smtpserver=$RET
#sed -i -e "s/SMTPSERVER/$smtpserver/" -e "s/EMAILFROM/$emailfrom/" -e "s/EMAILTO/$emailto/"  /var/ossec/etc/ossec.conf
# see http://www.fifi.org/doc/debconf-doc/tutorial.html, Troubleshooting
#db_stop


    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >22
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
